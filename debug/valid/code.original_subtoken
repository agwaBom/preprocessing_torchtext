def reorder suite suite classes reverse False class count len classes suite class type suite bins [ Ordered Set for i in range class count + 1 ]partition suite by type suite classes bins reverse reverse reordered suite suite class for i in range class count + 1 reordered suite add Tests bins[i] return reordered suite
def first value try return value[ 0 ]except Index Error return u''
def setup platform hass config add devices callback discovery info None import RF Xtrx as rfxtrxmodswitches rfxtrx get devices from config config Rfxtrx Switch add devices callback switches def switch update event ' Callbackforsensorupdatesfromthe RF Xtrxgateway 'if not isinstance event device rfxtrxmod Lighting Device or event device known to be dimmable or event device known to be rollershutter returnnew device rfxtrx get new device event config Rfxtrx Switch if new device add devices callback [new device] rfxtrx apply received command event if switch update not in rfxtrx RECEIVED EVT SUBSCRIBERS rfxtrx RECEIVED EVT SUBSCRIBERS append switch update
def expand probes probes defaults expected probes {}for probe name probe test in six iteritems probes if probe name not in expected probes keys expected probes[probe name] {}probe defaults probe test pop 'defaults' {} for test name test details in six iteritems probe test test defaults test details pop 'defaults' {} expected test details deepcopy defaults expected test details update probe defaults expected test details update test defaults expected test details update test details if test name not in expected probes[probe name] keys expected probes[probe name][test name] expected test detailsreturn expected probes
def test records test data ds Chart Data Source from data test data records data assert len ds columns 2 assert len ds index 4
def attach total voters to queryset queryset as field 'total voters' model queryset modeltype apps get model 'contenttypes' ' Content Type' objects get for model model sql 'SELEC Tcoalesce SUM total voters 0 FROM \n SELEC Tcoalesce votes votes count 0 total voters\n FRO Mvotes votes\n WHER Evotes votes content type id {type id}\n AN Dvotes votes object id {tbl} id\n ase'sql sql format type id type id tbl model meta db table qs queryset extra select {as field sql} return qs
def add theming locales theme locale paths settings COMPREHENSIVE THEME LOCALE PATH Sfor locale path in theme locale paths settings LOCALE PATHS + path locale path
def guess autoescape template name if template name is None or ' ' not in template name return Falseext template name rsplit ' ' 1 [1 ]return ext in ['html' 'htm' 'xml']
def path to filesystem root *paths paths [sanitize path path strip '/' for path in paths]safe path rootfor path in paths if not path continuefor part in path split '/' if not is safe filesystem path component part raise Unsafe Path Error part safe path os path join safe path part return safe path
def open filepath *args **kwargs if not os path exists filepath filepath os path join ' ' filepath return open filepath 'rb' *args **kwargs
def open pathname pathname verbose 0 try refno Res FS Open Resource File pathname u'' 1 except Res Error as arg if arg[ 0 ] -199 raiseelse return refnopathname decode pathname verbose verbose refno Res FS Open Resource File pathname u'' 1
def delete policy vhost name runas None if runas is None and not salt utils is windows runas salt utils get user res salt ['cmd run all'] [ context ['rabbitmqctl'] 'clear policy' '-p' vhost name] runas runas python shell False log debug ' Deletepolicy {0 }' format res['stdout'] return format response res ' Deleted'
def get Rectangular Grid diameter loops Complex maximum Complex minimum Complex zigzag demiradius 0 25 * diameter x Start minimum Complex real - demiradius real y minimum Complex imag - demiradius imag grid Path []row Index 0while y < maximum Complex imag add Grid Row diameter grid Path loops Complex maximum Complex row Index x Start y zigzag y + diameter imagrow Index + 1return grid Path
def write Output file Name '' print ''print ' Thebottomtoolisparsingthefile 'print os path basename file Name print ''start Time time time file Name Suffix file Name[ file Name rfind ' ' ] + ' bottom svg' craft Text skeinforge craft get Chain Text file Name 'bottom' if craft Text '' returnarchive write File Text file Name Suffix craft Text print ''print ' Thebottomtoolhascreatedthefile 'print file Name Suffixprint ''print ' Ittook%stocraftthefile ' % euclidean get Duration String time time - start Time repository Bottom Repository settings get Read Repository repository settings open SVG Page file Name Suffix repository svg Viewer value
def capture screenshot for step step when if world auto capture screenshots scenario num step scenario feature scenarios index step scenario + 1 step num step scenario steps index step + 1 step func name step defined at function func nameimage name '{prefix 03 d} {num 03 d} {name} {postfix}' format prefix scenario num num step num name step func name postfix when world capture screenshot image name
def run vcs tool path action info get vcs info get vcs root path tools info['actions'][action]for tool args in tools if programs find program tool programs run program tool args cwd path returnelse cmdnames [name for name args in tools]raise Action Tool Not Found info['name'] action cmdnames
def submit rescore entrance exam for student request usage key student None only if higher False check entrance exam problems for rescoring usage key task type 'rescore problem if higher' if only if higher else 'rescore problem' task class rescore problem task input task key encode entrance exam and student input usage key student task input update {'only if higher' only if higher} return submit task request task type task class usage key course key task input task key
@pytest fixture scope u'session' def celery config return {}
def synchronous tlockname def synched func @wraps func def synchronizer self *args **kwargs tlock getattr self tlockname logger debug 'acquiringlock%rfor%s' % tlockname func name with tlock logger debug 'acquiredlock%rfor%s' % tlockname func name result func self *args **kwargs logger debug 'releasinglock%rfor%s' % tlockname func name return resultreturn synchronizerreturn synched
def quota destroy all by project context project id return IMPL quota destroy all by project context project id
def get date time format dt string valid formats ['%I %M %S%p' '%I %M%p' '%H %M %S' '%H %M' '%Y-%m-%d' '%m-%d-%y' '%m-%d-%Y' '%m/%d/%y' '%m/%d/%Y' '%Y/%m/%d']for dt format in valid formats try datetime strptime dt string dt format return dt formatexcept Value Error continuereturn False
def install p K Queue Reactor from twisted internet main import install Reactorinstall Reactor p
def make path result r t rpath '/recipes/' + r tpath '/tasks/' + t return rpath + tpath + '/results/'
def index s3 redirect default URL f 'alert'
def strategy saturation largest first G colors distinct colors {v set for v in G}for i in range len G if i 0 node max G key G degree yield node for v in G[node] distinct colors[v] add 0 else saturation {v len c for v c in distinct colors items if v not in colors }node max saturation key lambda v saturation[v] G degree v yield node color colors[node]for v in G[node] distinct colors[v] add color
def initgroups uid gid if not pwd returnusername pwd getpwuid uid [0 ]if hasattr os u'initgroups' return os initgroups username gid groups [gr gr gid for gr in grp getgrall if username in gr gr mem ]setgroups groups
def Set Wsdl Method ns wsdl Name input MM wsdl Method N Ss add ns cur MM wsdl Method Map get ns wsdl Name if isinstance input MM list if cur MM is None wsdl Method Map[ ns wsdl Name ] input M Mreturn input M Melif isinstance cur MM list raise Runtime Error ' Duplicatewsdlmethod%s%s newclass%svsexisting%s ' % ns wsdl Name input MM[ 0 ] cur MM[ 0 ] else return cur M Melif cur MM is None or isinstance cur MM list wsdl Method Map[ ns wsdl Name ] input M Mreturn input M Melse return cur MM
def escape byte string s s replace specials s try return s decode 'ASCII' except Unicode Decode Error passif IS PYTHON 3 s new bytearray append extend s new append s new extend for b in s if b > 128 extend '\\% 3 o' % b encode 'ASCII' else append b return s new decode 'ISO- 8859 - 1 ' else l []append l appendfor c in s o ord c if o > 128 append '\\% 3 o' % o else append c return join bytes l decode 'ISO- 8859 - 1 '
def S white simple x if x ndim 1 x x[ None]return np dot x T x
def contains name value ret {'name' name 'result' False 'comment' '' 'changes' {}}if name not in reg ret['result'] Falseret['comment'] ' Value{ 0 }notinregister' format name return rettry if value in reg [name]['val'] ret['result'] Trueexcept Type Error passreturn ret
def find matching indices tree bin X left mask right mask left index np searchsorted tree bin X & left mask right index np searchsorted tree bin X right mask side 'right' return left index right index
def disconnect session session session['client'] auth logout session['key']
@pytest mark django dbdef test verify user empty email trans member with pytest raises Email Address Does Not Exist Email Address objects get user trans member assert trans member email '' with pytest raises Validation Error accounts utils verify user trans member with pytest raises Email Address Does Not Exist Email Address objects get user trans member
def fix line ending content return content replace '\r\n' '\n' replace '\r' '\n'
def assert equal none logical line start re re compile 'assert Equal\\ *? \\s+ None\\ $' end re re compile 'assert Equal\\ None ' if start re search logical line or end re search logical line yield 0 'N 318 assert Equal A None orassert Equal None A sentencesnotallowed Useassert Is None A instead ' start re re compile 'assert Is Not ?\\ None ' end re re compile 'assert Is Not ?\\ * \\s+ None\\ $' if start re search logical line or end re search logical line yield 0 'N 318 assert Is Not A None orassert Is Not None A mustnotbeused Useassert Is None A orassert Is Not None A instead '
def split query query qq query split '' keywords []accum Nonefor kw in qq if accum is None if kw startswith '"' accum kw[ 1 ]elif kw keywords append kw else accum + '' + kw if kw endswith '"' keywords append accum[ 0 -1 ] accum Noneif accum is not None keywords append accum return [kw strip for kw in keywords if kw strip ]
@ ensure existsdef run name cmd output None no start False stdin None python shell True preserve state False output loglevel 'debug' ignore retcode False use vt False keep env None orig state state name exc Nonetry ret salt ['container resource run'] name cmd container type virtualname exec driver EXEC DRIVER output output no start no start stdin stdin python shell python shell output loglevel output loglevel ignore retcode ignore retcode use vt use vt keep env keep env except Exception raisefinally if preserve state and orig state 'stopped' and state name 'stopped' stop name if output in None 'all' return retelse return ret[output]
def file url path return Q Url from Local File path to String Q Url Fully Encoded
def convert params exception Value Error error 400 request cherrypy serving requesttypes request handler callable annotations with cherrypy HTTP Error handle exception error for key in set types intersection request params request params[key] types[key] request params[key]
def get timeslice slice seconds now int time time slice count now // slice seconds slice start int slice count * slice seconds slice end slice start + slice seconds return Time Slice slice start slice end
def safe split estimator X y indices train indices None if hasattr estimator 'kernel' and callable estimator kernel and not isinstance estimator kernel GP Kernel raise Value Error ' Cannotuseacustomkernelfunction Precomputethekernelmatrixinstead ' if not hasattr X 'shape' if getattr estimator ' pairwise' False raise Value Error ' Precomputedkernelsoraffinitymatriceshavetobepassedasarraysorsparsematrices ' X subset [X[idx] for idx in indices]elif getattr estimator ' pairwise' False if X shape[ 0 ] X shape[ 1 ] raise Value Error ' Xshouldbeasquarekernelmatrix' if train indices is None X subset X[np ix indices indices ]else X subset X[np ix indices train indices ]else X subset safe indexing X indices if y is not None y subset safe indexing y indices else y subset Nonereturn X subset y subset
def cx Uniform ind 1 ind 2 indpb size min len ind 1 len ind 2 for i in xrange size if random random < indpb ind 1 [i] ind 2 [i] ind 2 [i] ind 1 [i] return ind 1 ind 2
def reverse ordering ordering tuple def invert x return x[ 1 ] if x startswith u'-' else u'-' + x return tuple [invert item for item in ordering tuple]
def get boost obj boost max log 10 1 + get popularity obj 1 0 if obj status in VALID STATUSES boost * BOOST MULTIPLIER FOR PUBLIC CONTEN Treturn boost
def guarded mul left right if not isinstance left numbers Integral passelif not isinstance right numbers Integral passelif left in 0 1 or right in 0 1 passelif left bit length + right bit length > 664386 raise Value Error u' Valueistoolargetobehandledinlimitedtimeandmemory ' return operator mul left right
def build or pattern patterns name None escape False or pattern []for pattern in patterns if not or pattern or pattern append ' ?' if name or pattern append 'P<' + name + '>' else or pattern append ' ' else or pattern append ' ' or pattern append ' ? %s ' % re escape pattern if escape else pattern or pattern append ' ' return '' join or pattern
def main parser argparse Argument Parser description ' Ansibledynamicinventory' parser add argument '--list' help ' Ansibleinventoryofallofthegroups' action 'store true' dest 'list inventory' parser add argument '--host' help ' Ansibleinventoryofaparticularhost' action 'store' dest 'ansible host' type str cli args parser parse args list inventory cli args list inventoryansible host cli args ansible hostif list inventory output list inventory ANSIBLE INV if ansible host find host ansible host HOST VARS
def with primary max staleness selection primary selection primarysds []for s in selection server descriptions if s server type SERVER TYPE RS Secondary staleness s last update time - s last write date - primary last update time - primary last write date + selection heartbeat frequency if staleness < max staleness sds append s else sds append s return selection with server descriptions sds
@handle response format@treeio login requireddef task time slot start request task id response format 'html' task get object or 404 Task pk task id if not request user profile has permission task mode 'x' return user denied request message " Youdon'thaveaccesstothis Task" if not task is being done by request user profile task time slot Task Time Slot task task time from datetime now user request user profile task time slot save task time slot set user from request request return Http Response Redirect reverse 'projects task view' args [task id]
def get bootstrap sample x y num reps combined hstack [x y] total obs len combined num x len x for i in range num reps indices randint 0 total obs total obs sampled combined take indices sampled x sampled[ num x]sampled y sampled[num x ] yield sampled x sampled y
def get integration manager global integration managerif not integration manager from reviewboard integrations models import Integration Config integration manager Integration Manager Integration Config return integration manager
def get config value request key default search in settings True value request session get key request COOKIES get key if value is None if search in settings value getattr settings key default else value defaultif isinstance default int try value int value except Value Error value request session[key] int default return value
def define name default None type None help None metavar None multiple False group None callback None return options define name default default type type help help metavar metavar multiple multiple group group callback callback
def check Netaddr Works With Prefixlen net prefixlen version if net & prefixlen To Netmask prefixlen version net return 1else return 0
def list servers backend socket '/var/run/haproxy sock' objectify False ha conn get conn socket ha cmd haproxy cmds list Servers backend backend return ha conn send Cmd ha cmd objectify objectify
def patch os patch module 'os'
def recursive walk path wildcard files []directories [path]while len directories > 0 directory directories pop for name in os listdir directory fullpath os path join directory name if os path isfile fullpath if re search wildcard name files append fullpath elif os path isdir fullpath directories append fullpath return files
def file hash load fnd gitfs salt utils gitfs Git FS opts gitfs init remotes opts ['gitfs remotes'] PER REMOTE OVERRIDES PER REMOTE ONLY return gitfs file hash load fnd
def cxxflags contains value return var contains 'CXXFLAGS' value
@builtin u' Swapthecaseoftext' swapcase apply func to match groups def replace swapcase match number file name metadata dictionaries data functions *args **kwargs return apply func to match groups match swapcase
def solve P Q U V structure None P U + V Q - U + V if isspmatrix U return spsolve Q P elif structure is None return solve Q P elif structure UPPER TRIANGULAR return solve triangular Q P else raise Value Error 'unsupportedmatrixstructure ' + str structure
@register tagdef firstof parser token bits token split contents [1 ]asvar Noneif len bits < 1 raise Template Syntax Error "'firstof'statementrequiresatleastoneargument" if len bits > 2 and bits[ -2 ] 'as' asvar bits[ -1 ]bits bits[ -2 ]return First Of Node [parser compile filter bit for bit in bits] asvar
def recover request uidb 64 None token None User Model get user model try uid force text urlsafe base 64 decode uidb 64 user User Model default manager get pk uid except Type Error Value Error Overflow Error User Model Does Not Exist user Noneif user and default token generator check token user token temp pwd uuid uuid 4 hexuser set password temp pwd user save user authenticate username user username password temp pwd user set unusable password user save login request user return redirect 'users recover done' return render request 'users/recover failed html'
@publicdef sqf norm f *gens **args options allowed flags args ['polys'] try F opt poly from expr f *gens **args except Polification Failed as exc raise Computation Failed 'sqf norm' 1 exc s g r F sqf norm if not opt polys return Integer s g as expr r as expr else return Integer s g r
def is task visible context task if context is admin return Trueif task['owner'] is None return Trueif context owner is not None if context owner task['owner'] return Truereturn False
def correlation X Y condition None **kwargs return covariance X Y condition **kwargs / std X condition **kwargs * std Y condition **kwargs
def backup get all by volume context volume id filters None return IMPL backup get all by volume context volume id filters filters
def volume up hass hass services call DOMAIN SERVICE VOLUME UP
def remove Endpoints pixel Table layer Extrusion Width paths removed Endpoints around Width for removed Endpoint Index in xrange len removed Endpoints - 1 -1 -1 removed Endpoint removed Endpoints[removed Endpoint Index]removed Endpoint Point removed Endpoint pointif is Point Added Around Closest pixel Table layer Extrusion Width paths removed Endpoint Point around Width removed Endpoints remove removed Endpoint
def tgrep conjunction action s l tokens join char u'&' tokens [x for x in tokens if x join char ]if len tokens 1 return tokens[ 0 ]else return lambda ts lambda n m None l None all predicate n m l for predicate in ts tokens
@task@cmdopts [ 'name ' 'n' ' Runspecifictests ' ] def test integration options reset call task 'start geoserver' info ' Geo Nodeisnowavailable runningthetestsnow ' name options get 'name' 'geonode tests integration' success Falsetry if name 'geonode tests csw' call task 'start' sh 'sleep 30 ' call task 'setup data' sh 'pythonmanage pytest%s--noinput--liveserver localhost 8000 ' % name except Build Failure as e info ' Testsfailed %s' % str e else success Truefinally stop reset if not success sys exit 1
def norm x x np asarray x nrm 2 linalg get blas funcs ['nrm 2 '] [x] return nrm 2 x
def dict diff d1 d2 d1 keys set d1 keys d2 keys set d2 keys both d1 keys & d2 keys missing in d1 []missing in d2 []different []for k in both if isinstance d1 [k] dict and isinstance d2 [k] dict missing in v1 missing in v2 different in v dict diff d1 [k] d2 [k] missing in d1 extend ['{ 0 } {1 }' format k m for m in missing in v1 ] missing in d2 extend ['{ 0 } {1 }' format k m for m in missing in v2 ] for child k left right in different in v different append '{ 0 } {1 }' format k child k left right continueif d1 [k] d2 [k] different append k d1 [k] d2 [k] missing in d1 extend d2 keys - both missing in d2 extend d1 keys - both return missing in d1 missing in d2 different
def set cache over settings destination setting key prefix value ttl existing destination settings get setting {} existing update value set cache key prefix + ' ' + setting value ttl destination settings[setting] value
def to bytes seq b bytearray for item in seq b append item return bytes b
def Shutdown Threads data source thread thread pool logger info ' Anerroroccurred Shuttingdown ' data source thread exit flag Truethread pool Shutdown data source thread join timeout 3 0 if data source thread is Alive logger warn '%shungwhiletryingtoexit' data source thread Get Friendly Name
def get single name url module required getter u' version ' mod get version module module name url version getter getattr mod getter if hasattr version getter u' call ' current version getter else current version getterreturn name url current required
def with Class classname namespace '' classattr '%s class' % namespace if namespace else 'class' return with Attribute **{classattr classname}
def shutdown delay 0 message None cmd ['shutdown' '-i' '5 ' '-g' delay '-y']if message cmd append message ret salt ['cmd run'] cmd python shell False return ret
def prio Sort elements random shuffle elements prio elems [ get Priority e e for e in elements]prio elems sort sorted elems [s for s in prio elems]return sorted elems
def openshift builder registry xml parent data osb XML Sub Element xml parent 'com openshift jenkins plugins pipeline Open Shift Builder' mapping [ 'api-url' 'api URL' 'https //openshift default svc cluster local' 'bld-cfg' 'bld Cfg' 'frontend' 'namespace' 'namespace' 'test' 'auth-token' 'auth Token' '' 'commit-ID' 'commit ID' '' 'verbose' 'verbose' False 'build-name' 'build Name' '' 'show-build-logs' 'show Build Logs' False ]convert mapping to xml osb data mapping fail required True
def setup sidebar items data if data allow sidebar items frappe db sql u'update`tab Portal Menu Item`setenabled 0' frappe db sql u'update`tab Portal Menu Item`setenabled 1\n DCTB DCTB DCTB whereroutein {0 } ' format u' ' join [u'"{ 0 }"' format d for d in data allow sidebar items] if data remove sidebar items frappe db sql u'update`tab Portal Menu Item`setenabled 1' frappe db sql u'update`tab Portal Menu Item`setenabled 0\n DCTB DCTB DCTB whereroutein {0 } ' format u' ' join [u'"{ 0 }"' format d for d in data remove sidebar items]
def gen password alphabet 'abcdefghijklmnopqrstuvwxyz 0123456789 ABCDEFGHIJKLMNOPQRSTUVWXYZ'password ''for in range 20 next index random randrange len alphabet password + alphabet[next index]hashed pwd gen hash 'salt' password 'sha 512 ' return password hashed pwd
def get action libs abs path pack None entry point None entry point abs path get entry point abs path pack pack entry point entry point if entry point abs path is not None return os path join os path dirname entry point abs path ACTION LIBS DIR else return None
def libvlc video set deinterlace p mi psz mode f Cfunctions get 'libvlc video set deinterlace' None or Cfunction 'libvlc video set deinterlace' 1 1 None None Media Player ctypes c char p return f p mi psz mode
def api handle error with json handler def api handle error with json wrapper fn request *args **kwargs try return handler request *args **kwargs except Permission Denied raiseexcept Http 404 raiseexcept Exception as e logger error ' Errorin JSO Nview {}' format request path traceback print exc return Json Response Message Error ' Unexpectederror % err s' % {'err' e} status 500 return api handle error with json wrapper fn
def download **kwargs kwargs['direction'] DOWNLOA Dreturn scp **kwargs
def set Basic Logger DEBUG set Logger Class Basic Logger Basic Logger set Level DEBUG
def get sandbox python path inherit from parent True inherit parent virtualenv True sandbox python path []parent python path os environ get 'PYTHONPATH' '' parent python path parent python path split ' ' parent python path [path for path in parent python path if path]if inherit from parent sandbox python path extend parent python path if inherit parent virtualenv and hasattr sys 'real prefix' site packages dir get python lib assert sys prefix in site packages dir sandbox python path append site packages dir sandbox python path ' ' join sandbox python path sandbox python path ' ' + sandbox python path return sandbox python path
def slug is numerical slug try float slug except Value Error return Falsereturn True
def set key value profile None comps key split '?' path comps[ 0 ]key comps[ 1 ]return salt utils vault write path key value profile profile
def get Parameter name index args kwargs default None param kwargs get name if len args > index if param raise Value Error " Parameter'%s'isspecifiedtwice" % name param args[index]return param or default
def create security group call None kwargs None global netconnif not netconn netconn get conn Network Management Client if kwargs is None kwargs {}if kwargs get 'location' is None kwargs['location'] get location if kwargs get 'resource group' is None kwargs['resource group'] config get cloud config value 'resource group' {} opts search global True if kwargs get 'name' is None kwargs['name'] config get cloud config value 'name' {} opts search global True group params Network Security Group location kwargs['location'] netconn network security group create or update rource group name kwargs['resource group'] network security group name kwargs['name'] parameters group params count 0while True try return show security group kwargs kwargs except Cloud Error count + 1if count > 120 raise Value Error ' Timedoutwaitingforoperationtocomplete ' time sleep 5
def device portnumber enum comm Comm Port Identifier get Port Identifiers ports []while enum has More Elements el enum next Element if el get Port Type comm Comm Port Identifier PORT SERIAL ports append el return ports[portnumber] get Name
def assert in obj in None out None if in is not None for name in in assert name in obj if out is not None for name in out assert name not in obj
@box types Set def box set typ val c inst setobj Set Instance c context c builder typ val obj inst parentres cgutils alloca once value c builder obj with c builder if else cgutils is not null c builder obj as has parent otherwise with has parent c pyapi incref obj with otherwise payload inst payload ok listobj native set to python list typ payload c with c builder if then ok likely True obj c pyapi set new listobj c pyapi decref listobj c builder store obj res c context nrt decref c builder typ val return c builder load res
def get New Repository return Interpret Repository
def dominating set G start with None all nodes set G if start with is None start with arbitrary element all nodes if start with not in G raise nx Network X Error 'node{}isnotin G' format start with dominating set {start with}dominated nodes set G[start with] remaining nodes all nodes - dominated nodes - dominating set while remaining nodes v remaining nodes pop undominated neighbors set G[v] - dominating set dominating set add v dominated nodes undominated neighborsremaining nodes - undominated neighborsreturn dominating set
def remove small objects ar min size 64 connectivity 1 in place False check dtype supported ar if in place out arelse out ar copy if min size 0 return outif out dtype bool selem ndi generate binary structure ar ndim connectivity ccs np zeros like ar dtype np int 32 ndi label ar selem output ccs else ccs outtry component sizes np bincount ccs ravel except Value Error raise Value Error ' Negativevaluelabelsarenotsupported Tryrelabelingtheinputwith`scipy ndimage label`or`skimage morphology label` ' if len component sizes 2 warn ' Onlyonelabelwasprovidedto`remove small objects` Didyoumeantouseabooleanarray?' too small component sizes < min size too small mask too small[ccs]out[too small mask] 0return out
def get redirect url course key usage key course key chapter section vertical unused position final target id path to location modulestore usage key if chapter is None redirect url reverse 'courseware' args unicode course key elif section is None redirect url reverse 'courseware chapter' args unicode course key chapter elif position is None redirect url reverse 'courseware section' args unicode course key chapter section else redirect url reverse 'courseware position' args unicode course key chapter section navigation index position redirect url + '?{}' format urlencode {'activate block id' unicode final target id } return redirect url
def disable term protect name call None if call 'action' raise Salt Cloud System Exit ' Thedisable term protectactionmustbecalledwith-aor--action ' return toggle term protect name 'false'
def test cnn fit cnn Condensed Nearest Neighbour random state RND SEED cnn fit X Y assert equal cnn min c 0 assert equal cnn maj c 2 assert equal cnn stats c [0 ] 2 assert equal cnn stats c [1 ] 6 assert equal cnn stats c [2 ] 12
def prepend root dir opts path options root dir os path abspath opts['root dir'] root opt opts['root dir'] rstrip os sep for path option in path options if path option in opts path opts[path option]if path root opt or path startswith root opt + os sep path path[len root opt ]opts[path option] salt utils path join root dir path
def set X window properties win id **properties import xcb xcb xprotoconn xcb connect atoms {name conn core Intern Atom False len name name for name in properties}utf 8 string atom Nonefor name val in properties iteritems atom atoms[name] reply atomtype atom xcb xproto Atom STRIN Gif isinstance val unicode if utf 8 string atom is None utf 8 string atom conn core Intern Atom True len 'UTF 8 STRING' 'UTF 8 STRING' reply atomtype atom utf 8 string atomval val encode u'utf- 8 ' conn core Change Property Checked xcb xproto Prop Mode Replace win id atom type atom 8 len val val conn flush conn disconnect
def from sequence seq partition size None npartitions None seq list seq if npartitions and not partition size partition size int math ceil len seq / npartitions if npartitions is None and partition size is None if len seq < 100 partition size 1else partition size int len seq / 100 parts list partition all partition size seq name 'from sequence-' + tokenize seq partition size d dict name i list part for i part in enumerate parts return Bag d name len d
def get Host By Name name timeout None effort 10 return get Resolver get Host By Name name timeout effort
def get fragments phase frags return [ 3 - x % 3 % 3 for x in get fragments coord frags ]
def add mock hadoop output parts output subdir get mock dir 'output' iso now for i part in enumerate parts part path os path join output subdir 'part-% 05 d' % i with open part path 'wb' as part file part file write part
@register assignment tag takes context False def assignment explicit no context arg return 'assignment explicit no context- Expectedresult %s' % arg
def get form model converter base class form Base Form only None exclude None field args None allow pk False extra fields None result model form model base class base class only only exclude exclude field args field args allow pk allow pk converter converter if extra fields for name field in iteritems extra fields setattr result name form recreate field field return result
def belongs to folder path file Name if not path endswith os path sep path + os path sepreturn file Name startswith path
def resource view clear context data dict model context['model'] check access 'resource view clear' context data dict view types data dict get 'view types' model Resource View delete all view types model repo commit
def validipport port try assert 0 < int port < 65535 except Assertion Error Value Error return Falsereturn True
def floyd warshall predecessor and distance G weight 'weight' from collections import defaultdictdist defaultdict lambda defaultdict lambda float 'inf' for u in G dist[u][u] 0pred defaultdict dict undirected not G is directed for u v d in G edges data True e weight d get weight 1 0 dist[u][v] min e weight dist[u][v] pred[u][v] uif undirected dist[v][u] min e weight dist[v][u] pred[v][u] vfor w in G for u in G for v in G if dist[u][v] > dist[u][w] + dist[w][v] dist[u][v] dist[u][w] + dist[w][v] pred[u][v] pred[w][v]return dict pred dict dist
def Pickle To File records outfile encoded records []for record in records encoded record Encode encoded records append encoded pickle dump encoded records outfile protocol pickle HIGHEST PROTOCOL
def scal elemwise with nfunc nfunc nin nout def construct symbol symbolname symbol name inplace symbolname endswith ' inplace' if inplace msg 'inplace'else msg 'no inplace'n ' Elemwise{%s %s}' % symbolname msg if inplace scalar op getattr scal symbolname[ - len ' inplace' ] inplace scalar op scalar op class scal transfer type 0 rval elemwise Elemwise inplace scalar op {0 0} name n nfunc spec nfunc and nfunc nin nout else scalar op getattr scal symbolname rval elemwise Elemwise scalar op name n nfunc spec nfunc and nfunc nin nout if getattr symbol ' doc ' False rval doc symbol doc + '\n' + rval doc rval epydoc as Routine symbolrval module 'tensor'pprint assign rval printing Function Printer symbolname return rvalreturn construct
def get complete paths config page input path os path join config[u'docs dir'] page input path output path os path join config[u'site dir'] page output path return input path output path
def auth profile None if profile credentials salt ['config option'] profile user credentials['keystone user']password credentials['keystone password']tenant credentials['keystone tenant']auth url credentials['keystone auth url']region name credentials get 'keystone region name' None service type credentials['keystone service type']else user salt ['config option'] 'keystone user' password salt ['config option'] 'keystone password' tenant salt ['config option'] 'keystone tenant' auth url salt ['config option'] 'keystone auth url' region name salt ['config option'] 'keystone region name' service type salt ['config option'] 'keystone service type' kwargs {'username' user 'password' password 'tenant name' tenant 'auth url' auth url 'region name' region name 'service type' service type}return suoneu Salt Neutron **kwargs
def enqueue *args **kwargs import frappe utils background jobsfrappe utils background jobs enqueue *args **kwargs
def user email return User objects get email email
def get qualifier module qualifier Noneif module params['version'] > 0 qualifier str module params['version'] elif module params['alias'] qualifier str module params['alias'] return qualifier
def show legend ax leg ax legend loc 1 shadow True fancybox True labelspacing 0 2 borderpad 0 15 ltext leg get texts llines leg get lines frame leg get frame from matplotlib artist import setpsetp ltext fontsize 'small' setp llines linewidth 1
def patch time from gevent hub import sleep time import 'time' time sleep sleep
@contextfunctiondef documents document list context documents skip group False request context['request']response format 'html'if 'response format' in context response format context['response format']return Markup render to string 'documents/tags/document list' {'documents' documents 'skip group' skip group} context instance Request Context request response format response format
@contextfunctiondef modules header block context request context['request'] modules active get modules request for module in modules module title module title response format 'html'if 'response format' in context response format context['response format']return Markup render to string 'core/tags/modules header block' {'modules' modules 'active' active 'request' request} response format response format
@register filter is safe False def length is value arg try return len value int arg except Value Error Type Error return ''
def load pickle fname with get file obj fname 'rb' as fin return c Pickle load fin
@utils no 4byte paramsdef metadef namespace update context namespace id namespace dict session None session session or get session return metadef namespace api update context namespace id namespace dict session
def trim var var value makeconf get makeconf old value get var var if old value is not None salt ['file sed'] makeconf value '' limit var new value get var var return {var {'old' old value 'new' new value}}
def strip math s remove '\\mathdefault' '\\rm' '\\cal' '\\tt' '\\it' '\\' '{' '}' s s[ 1 -1 ]for r in remove s s replace r '' return s
def display ctl chars index cc title ' Special Character'col 1 width len title col 2 width max map len index values FMT '{idx <{col 1 width}}{name <{col 2 width}}{value}'print ' Specialline Characters' center 40 rstrip print FMT format idx ' Index' name ' Name' value ' Value' col 1 width col 1 width col 2 width col 2 width print '{ 0 }{ 1 }{ 2 }' format '-' * col 1 width '-' * col 2 width '-' * 10 for index name name in index items try index getattr termios index name value cc[index]if value '\xff' value ' POSIX VDISABLE'else value repr value except Attribute Error value 'undef'print FMT format idx index name name name value value col 1 width col 1 width col 2 width col 2 width print
def set Last Refresh ex List cache db con db DB Connection 'cache db' cache db con upsert 'scene exceptions refresh' {'last refreshed' int time mktime datetime datetime today timetuple } {'list' ex List}
def diversity first front first last df hypot first front[ 0 ] fitness values[ 0 ] - first[ 0 ] first front[ 0 ] fitness values[ 1 ] - first[ 1 ] dl hypot first front[ -1 ] fitness values[ 0 ] - last[ 0 ] first front[ -1 ] fitness values[ 1 ] - last[ 1 ] dt [hypot first fitness values[ 0 ] - second fitness values[ 0 ] first fitness values[ 1 ] - second fitness values[ 1 ] for first second in zip first front[ -1 ] first front[ 1 ] ]if len first front 1 return df + dl dm sum dt / len dt di sum abs d i - dm for d i in dt delta df + dl + di / df + dl + len dt * dm return delta
def handle sec error error exception class None if error 0 returncf error string Security Sec Copy Error Message String error null output CF Helpers cf string to unicode cf error string Core Foundation CF Release cf error string if output is None or output u'' output u'OS Status%s' % error if exception class is None exception class OS Errorraise exception class output
def flag file path flag create False path os path join path JOB ADMIN path os path join path flag if create try f open path 'w' f write 'ok\n' f close return Trueexcept IO Error return Falseelse return os path exists path
def infinibox required together return [['user' 'password']]
def generate group title group return group name replace ' ' '' title
def data spider path ignore Value Error Not Implemented Error followlinks True hidden False extra kwargs None return {os path basename path spider path ignore ignore followlinks followlinks hidden hidden extra kwargs extra kwargs }
def test ee bad ratio ratio -1 0 ee Easy Ensemble ratio ratio assert raises Value Error ee fit X Y ratio 100 0ee Easy Ensemble ratio ratio assert raises Value Error ee fit X Y ratio 'rnd'ee Easy Ensemble ratio ratio assert raises Value Error ee fit X Y ratio [0 5 0 5]ee Easy Ensemble ratio ratio assert raises Value Error ee fit X Y
def strict dependencies target dep context for declared in resolve aliases target if isinstance declared dep context compiler plugin types for r in declared closure bfs True **dep context target closure kwargs yield r else yield declared
def validate exps in collection are public collection for exploration id in collection exploration ids if rights manager is exploration private exploration id raise utils Validation Error ' Cannotreferenceaprivateexplorationwithinapubliccollection exploration ID %s' % exploration id
@with setup prepare stdout def test output snippets with groups within single quotes colorful runner Runner feature name 'single-quoted-snippet' verbosity 3 no color False runner run assert stdout lines u"\n\x 1 b[ 1 37 m Feature single-quotedsnippetproposal\x 1 b[ 1 30 m#tests/functional/output features/single-quoted-snippet/single-quoted-snippet feature 1\x 1 b[ 0 m\n\n\x 1 b[ 1 37 m Scenario Proposematchedgroups\x 1 b[ 1 30 m#tests/functional/output features/single-quoted-snippet/single-quoted-snippet feature 2\x 1 b[ 0 m\n\x 1 b[ 0 33 m Given Ihave'stuffhere'and'more@#$%\u 02 c 6 &bizarsutffh 3 r 3 '\x 1 b[ 1 30 m#tests/functional/output features/single-quoted-snippet/single-quoted-snippet feature 3\x 1 b[ 0 m\n\n\x 1 b[ 1 37 m 1 feature \x 1 b[ 0 31 m 0 passed\x 1 b[ 1 37 m \x 1 b[ 0 m\n\x 1 b[ 1 37 m 1 scenario \x 1 b[ 0 31 m 0 passed\x 1 b[ 1 37 m \x 1 b[ 0 m\n\x 1 b[ 1 37 m 1 step \x 1 b[ 0 33 m 1 undefined\x 1 b[ 1 37 m \x 1 b[ 1 32 m 0 passed\x 1 b[ 1 37 m \x 1 b[ 0 m\n\n\x 1 b[ 0 33 m Youcanimplementstepdefinitionsforundefinedstepswiththesesnippets \n\n#-*-coding utf- 8 -*-\nfromlettuceimportstep\n\n@step u' Given Ihave\\' [^\\']* \\'and\\' [^\\']* \\'' \ndefgiven i have group 1 and group 2 step group 1 group 2 \nassert False ' Thisstepmustbeimplemented'\x 1 b[ 0 m\n"
def task info get task id global DAT Atry task info DATA['task info'][task id]except Key Error msg LW ' Couldnotfindtaskinfo%s' % task id LOG warn msg raise exception Task Not Found task id task id return task info
def extract views from urlpatterns urlpatterns base '' namespace None views []for p in urlpatterns if hasattr p 'url patterns' try patterns p url patternsexcept Import Error continueviews extend extract views from urlpatterns patterns base + p regex pattern namespace or [] + p namespace and [p namespace] or [] elif hasattr p 'callback' try views append p callback base + p regex pattern namespace p name except View Does Not Exist continueelse raise Type Error '%sdoesnotappeartobeaurlpatternobject' % p return views
def ts to str timestamp date datetime datetime fromtimestamp timestamp date string date strftime '%d/%m/%Y%H %M%Z' return date string
def node ports graph node portinputs {}portoutputs {}for u d in graph in edges iter node data True for src dest in d[u'connect'] portinputs[dest] u src for v d in graph out edges iter node data True for src dest in d[u'connect'] if isinstance src tuple srcport src[ 0 ]else srcport srcif srcport not in portoutputs portoutputs[srcport] []portoutputs[srcport] append v dest src return portinputs portoutputs
def patfilter names pat result []if pat not in pat cache pat cache[pat] re compile translate pattern pat match pat cache[pat] matchreturn filter match names
def equate Polar Dot Azimuth point return Value equate Cylindrical Dot Azimuth point return Value
def destroy name call None if call 'function' raise Salt Cloud System Exit ' Thedestroyactionmustbecalledwith-d --destroy -aor--action ' utils ['cloud fire event'] 'event' 'destroyinginstance' 'salt/cloud/{ 0 }/destroying' format name args {'name' name} sock dir opts ['sock dir'] transport opts ['transport'] name name split ' ' [0 ]node show instance name call 'action' conn get conn service ' Soft Layer Ticket' response conn create Cancel Server Ticket {'id' node['id'] 'reason' ' Salt Cloud Hardware Server Cancellation' 'content' ' Pleasecancelthisserver' 'cancel Associated Items' True 'attachment Type' 'HARDWARE'} utils ['cloud fire event'] 'event' 'destroyedinstance' 'salt/cloud/{ 0 }/destroyed' format name args {'name' name} sock dir opts ['sock dir'] transport opts ['transport'] if opts get 'update cachedir' False is True utils ['cloud delete minion cachedir'] name active provider name split ' ' [0 ] opts return response
def pack o stream **kwargs packer Packer **kwargs stream write packer pack o
@pytest fixture scope u'class' params [u'internal' u'guessit'] ids [u'internal' u'guessit'] autouse True def config request newconfig Template request cls config render {u'parser' request param} assert request cls config newconfig u'configparameterizationdidnothing?'return newconfig
def build server url *args **kwargs return urljoin get server url **kwargs *args
@pytest mark networkdef test uninstall editable from svn script tmpdir result script pip 'install' '-e' '%s#egg initools-dev' % local checkout 'svn+http //svn colorstudy com/INI Tools/trunk' tmpdir join 'cache' result assert installed 'INI Tools' result 2 script pip 'uninstall' '-y' 'initools' assert script venv / 'src' / 'initools' in result 2 files after assert all changes result result 2 [ script venv / 'src' script venv / 'build' script site packages / 'easy-install pth' ]
def get Simple Patterns num Ones num Patterns num Cols num Ones * num Patterns p []for i in xrange num Patterns x numpy zeros num Cols dtype 'float 32 ' x[ i * num Ones i + 1 * num Ones ] 1p append x return p
def toposort data if len data 0 returnfor k v in data items v discard k extra items in deps reduce set union data values - set data keys data update {item set for item in extra items in deps} while True ordered sorted set item for item dep in data items if len dep 0 if not ordered breakfor item in ordered yield item data pop item None for dep in sorted data values dep - set ordered if len data 0 msg u' Cyclicdependenciesexistamongtheseitems {}'raise Conda Value Error msg format u'->' join repr x for x in data keys
def which path jail None chroot None root None origin False quiet False opts ''if quiet opts + 'q'if origin opts + 'o'cmd pkg jail chroot root cmd append 'which' if opts cmd append '-' + opts cmd append path return salt ['cmd run'] cmd output loglevel 'trace' python shell False
def Ynm c n m theta phi from sympy import conjugatereturn conjugate Ynm n m theta phi
def valuestodict key dict {}size winreg Query Info Key key [1 ]for i in range size data winreg Enum Value key i dict[data[ 0 ]] data[ 1 ]return dict
def fd f return f fileno if hasattr f 'fileno' else f
def sync engines saltenv 'base' return salt utils extmods sync opts 'engines' saltenv saltenv [0 ]
def wrap traceback traceback if email format 'html' try from pygments import highlightfrom pygments lexers import Python Traceback Lexerfrom pygments formatters import Html Formatterwith pygments Trueexcept Import Error with pygments Falseif with pygments formatter Html Formatter noclasses True wrapped highlight traceback Python Traceback Lexer formatter else wrapped '<pre>%s</pre>' % traceback else wrapped tracebackreturn wrapped
def deserialize contributors node user dicts auth validate False contribs []for contrib dict in user dicts fullname contrib dict['fullname']visible contrib dict['visible']email contrib dict get 'email' if validate is True fullname sanitize strip html fullname if not fullname raise Validation Value Error ' Fullnamefieldcannotbeempty' if email validate email email if contrib dict['id'] contributor User load contrib dict['id'] else try contributor User create unregistered fullname fullname email email contributor save except Validation Error contributor get user email email if not contributor is registered and node primary key not in contributor unclaimed records contributor add unclaimed record node node referrer auth user given name fullname email email contributor save contribs append {'user' contributor 'visible' visible 'permissions' expand permissions contrib dict get 'permission' } return contribs
@register simple tagdef disqus id for obj return u'%s-%s' % obj meta object name obj id
def test ast good raise can compile u' raise ' can compile u' raise Exception ' can compile u' raisee '
def is type factory type def inner x if type x type raise Value Error " Valuemusthavetype'%s'" % str type return inner
def exp create database db name demo lang user password 'admin' login 'admin' country code None logger info ' Createdatabase`%s` ' db name create empty database db name initialize db id db name demo lang user password login country code return True
def ipexec validate fname expected out expected err '' options None commands import nose tools as nt out err ipexec fname options commands if err if expected err nt assert equal '\n' join err strip splitlines '\n' join expected err strip splitlines else raise Value Error ' Runningfile%rproducederror %r' % fname err nt assert equal '\n' join out strip splitlines '\n' join expected out strip splitlines
def maybe convert ix *args ixify Truefor arg in args if not isinstance arg np ndarray list ABC Series Index ixify Falseif ixify return np ix *args else return args
def dumps obj skipkeys False ensure ascii True check circular True allow nan True cls None indent None separators None encoding 'utf- 8 ' default None use decimal True **kw if not skipkeys and ensure ascii and check circular and allow nan and cls is None and indent is None and separators is None and encoding 'utf- 8 ' and default is None and use decimal and not kw return default encoder encode obj if cls is None cls JSON Encoderreturn cls skipkeys skipkeys ensure ascii ensure ascii check circular check circular allow nan allow nan indent indent separators separators encoding encoding default default use decimal use decimal **kw encode obj
def get language bidi return gettext language dir translation get language 'rtl'
@gen coroutinedef Get UDID Timestamps merged store files last seen {}for f in files contents yield gen Task merged store Get f dev list json loads contents for entry in dev list timestamp entry['timestamp']device dict entry['request'] get 'device' entry['request'] get 'device dict' None if not device dict continueudid device dict get 'test udid' None if not udid continueprev seen last seen get udid 0 if timestamp > prev seen last seen[udid] timestampraise gen Return last seen
def wrap callable wrapper fn if hasattr fn ' name ' return update wrapper wrapper fn else f wrapper f name fn class name if hasattr fn ' module ' f module fn module if hasattr fn call ' doc ' and fn call doc f doc fn call doc elif fn doc f doc fn doc return f
@depends HAS ESX CLI def get coredump network config host username password protocol None port None esxi hosts None cmd 'systemcoredumpnetworkget'ret {}if esxi hosts if not isinstance esxi hosts list raise Command Execution Error "'esxi hosts'mustbealist " for esxi host in esxi hosts response salt utils vmware esxcli host username password cmd protocol protocol port port esxi host esxi host if response['retcode'] 0 ret update {esxi host {' Error' response get 'stdout' }} else ret update {esxi host {' Coredump Config' format coredump stdout response }} else response salt utils vmware esxcli host username password cmd protocol protocol port port if response['retcode'] 0 ret update {host {' Error' response get 'stdout' }} else stdout format coredump stdout response ret update {host {' Coredump Config' stdout}} return ret
def live screenshot registry xml parent data live XML Sub Element xml parent 'org jenkinsci plugins livescreenshot Live Screenshot Build Wrapper' live set 'plugin' 'livescreenshot' mapping [ 'full-size' 'fullscreen Filename' 'screenshot png' 'thumbnail' 'thumbnail Filename' 'screenshot-thumb png' ]convert mapping to xml live data mapping fail required True
def markmin escape text return regex markmin escape sub lambda m '\\' + m group 0 replace '\\' '\\\\' text
def pickle String I stringi return unpickle String I stringi getvalue stringi tell
def get value return value if callable value else value
def random name size 6 chars string ascii uppercase + string digits return 'test-' + '' join random choice chars for x in range size
def connect to region region name **kw params for region in regions if region name region name return region connect **kw params return None
def search python list python code template names retval set for tn in template names retval update search python python code tn return sorted retval
def libvlc vlm show media p instance psz name f Cfunctions get 'libvlc vlm show media' None or Cfunction 'libvlc vlm show media' 1 1 string result ctypes c void p Instance ctypes c char p return f p instance psz name
@cmddef clean recursive rm '$testfn*' '* bak' '* core' '* egg-info' '* orig' '* pyc' '* pyd' '* pyo' '* rej' '* so' '* ~' '* pycache ' ' coverage' ' tox' safe rmtree 'build' safe rmtree ' coverage' safe rmtree 'dist' safe rmtree 'docs/ build' safe rmtree 'htmlcov' safe rmtree 'tmp'
def ca items s if atomp items return itemsif len s 0 return items[ 0 ]lst [0 ] * s[ 0 ] stride len items // s[ 0 ] if s[ 0 ] else 0 for i in range s[ 0 ] start i * stride lst[i] ca items[start start + stride ] s[ 1 ] return lst
def has arithmetic operator line for operator in pep 8 ARITHMETIC OP if operator in line return Truereturn False
def encode value *args **kwargs kwargs setdefault 'separators' ' ' ' ' return json dumps value *args **kwargs replace '</' '<\\/'
def build Name Cache show None with name Cache Lock sickbeard scene exceptions retrieve exceptions if not show for show in sickbeard show List build Name Cache show else clear Cache show indexerid for cur Season in [ -1 ] + sickbeard scene exceptions get scene seasons show indexerid for name in set sickbeard scene exceptions get scene exceptions show indexerid season cur Season + [show name] name sickbeard helpers full sanitize Scene Name name if name in name Cache continuename Cache[name] int show indexerid
def abs file for m in sys modules values if hasattr m ' loader ' continuetry m file os path abspath m file except Attribute Error continue
def wait for fun fun timeout 900 **kwargs start time time log debug ' Attemptingfunction{ 0 }' format fun trycount 0while True trycount + 1try response fun **kwargs if not isinstance response bool return responseexcept Exception as exc log debug ' Caughtexceptioninwait for fun {0 }' format exc time sleep 1 log debug ' Retryingfunction{ 0 }on try{ 1 } ' format fun trycount if time time - start > timeout log error ' Functiontimedout {0 }' format timeout return False
def get xmodule urls pipeline js settings settings PIPELINE JS['module-js']if settings DEBUG paths [path replace ' coffee' ' js' for path in pipeline js settings['source filenames']]else paths [pipeline js settings['output filename']]return [staticfiles storage url path for path in paths]
@step STEP PREFIX + 'sendingemaildoesnotwork' def email broken step mail Email Message send broken send
def templates for host templates if not isinstance templates list tuple templates [templates]theme dir host theme path host templates []if theme dir for template in templates host templates append u'%s/templates/%s' % theme dir template host templates append template return host templatesreturn templates
def api translate name output kwargs return report output keyword 'value' data Tx kwargs get 'value' ''
def make icindervolumemanager tests client factory class Tests I Cinder Volume Manager Tests Mixin Test Case def set Up self super Tests self set Up self client client factory test case self return Tests
@open file 0 mode 'r' def read p2 g path encoding 'utf- 8 ' lines line decode encoding for line in path G parse p2 g lines return G
def as float X variable if isinstance variable float return np cast[theano config float X] variable if isinstance variable np ndarray return np cast[theano config float X] variable return theano tensor cast variable theano config float X
@documented contextmanagerdef hide *groups return set output groups False
def replace network acl entry network acl id None rule number None protocol None rule action None cidr block None egress None network acl name None icmp code None icmp type None port range from None port range to None region None key None keyid None profile None kwargs locals return create network acl entry replace True **kwargs
@with setup prepare stdout def test output with success colorless with table runner Runner feature name 'success table' verbosity 3 no color True runner run assert stdout lines '\n Feature Table Success#tests/functional/output features/success table/success table feature 1\n\n Scenario Addtwonumbers\xe 2 \x 99 \xa 5 #tests/functional/output features/success table/success table feature 2\n Given Ihave 0 bucks#tests/functional/output features/success table/success table steps py 28 \n Andthat Ihavetheseitems #tests/functional/output features/success table/success table steps py 32 \n name price \n Porsche 200000 \n Ferrari 400000 \n When Isellthe" Ferrari"#tests/functional/output features/success table/success table steps py 42 \n Then Ihave 400000 bucks#tests/functional/output features/success table/success table steps py 28 \n Andmygaragecontains #tests/functional/output features/success table/success table steps py 47 \n name price \n Porsche 200000 \n\n 1 feature 1passed \n 1 scenario 1passed \n 5 steps 5passed \n'
def get value type kind if kind TEXT return APE Text Valueelif kind BINARY return APE Binary Valueelif kind EXTERNAL return APE Ext Valueraise Value Error 'unknownkind%r' % kind
def translated revision locale 'de' **kwargs parent rev revision is approved True parent rev save translation document parent parent rev document locale locale translation save new kwargs {'document' translation 'based on' parent rev}new kwargs update kwargs return revision **new kwargs